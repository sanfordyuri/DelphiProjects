unit MovimentoEventos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.DBCtrls, Vcl.Mask, Conexao;

type
  TMovimentoEvento = class(TForm)
    EdtMesAno: TMaskEdit;
    lblMesAno: TLabel;
    LkpCargo: TDBLookupComboBox;
    lblCargo: TLabel;
    LkpFuncionario: TDBLookupComboBox;
    lblFuncionario: TLabel;
    LkpEvento: TDBLookupComboBox;
    lblEventos: TLabel;
    EdtValor: TEdit;
    lblValor: TLabel;
    btnSalvar: TButton;
    BtnCancelar: TButton;
    QueryCargos: TFDQuery;
    QueryFuncionarios: TFDQuery;
    QueryEventos: TFDQuery;
    DtsCargos: TDataSource;
    DtsFuncionarios: TDataSource;
    DtsEventos: TDataSource;
    procedure FormCreate(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  MovimentoEvento: TMovimentoEvento;

implementation

{$R *.dfm}

procedure TMovimentoEvento.btnSalvarClick(Sender: TObject);
begin
  if (EdtMesAno.Text = '') then
  begin
    ShowMessage('Informe o mês/Ano');
    EdtMesAno.SetFocus;
    Exit;
  end;
  if (LkpEvento.ComponentIndex = -1) then
  begin
    ShowMessage('Informe o Evento');
    LkpEvento.SetFocus;
    Exit;
  end;
  if (EdtValor.Text = '') then
  begin
    ShowMessage('Informe o Valor');
    EdtValor.SetFocus;
    Exit;
  end;
  if not (StrToFloat(EdtValor.Text) > 0) then
  begin
    ShowMessage('Informe um Valor válido');
    EdtValor.SetFocus;
    Exit;
  end;
end;

procedure TMovimentoEvento.FormCreate(Sender: TObject);
begin
  QueryCargos.Open;
  QueryFuncionarios.Open;
  QueryEventos.Open;
end;

end.
