unit PrincipalForm;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.Mask, HoraExtraClass, Generics.Collections, TimeSpan;
type
  TPrincipal = class(TForm)
    LblCodigo: TLabel;
    EdtCodigo: TEdit;
    EdtData: TMaskEdit;
    LblData: TLabel;
    RadioGroup: TRadioGroup;
    EdtHrsExtras: TMaskEdit;
    LblHorasExtras: TLabel;
    BtnProcessar: TButton;
    MemoLog: TMemo;
    LblLog: TLabel;
    BtnAdd: TButton;
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure BtnAddClick(Sender: TObject);
    procedure BtnProcessarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Principal: TPrincipal;
  HoraExtra: THoraExtra;
  BancoDeHoras: TDictionary<Integer, TObjectList<THoraExtra>>;
  TimeSpan: TTimeSpan;

implementation

{$R *.dfm}

procedure TPrincipal.BtnAddClick(Sender: TObject);
var
  Codigo:Integer;
  Data:String;
  DomingoOuFeriado:Integer;
  TempoEmMin:Double;
  ListaHorasExtras: TObjectList<THoraExtra>;
begin
  ListaHorasExtras := TObjectList<THoraExtra>.Create;
  Codigo := StrToInt(EdtCodigo.Text);
  Data := EdtData.Text;
  DomingoOuFeriado := RadioGroup.ItemIndex;
  TimeSpan := System.TimeSpan.TTimeSpan.Parse(TimeToStr(StrToTime(EdtHrsExtras.Text)));
  TempoEmMin := (TimeSpan.TotalSeconds/60);
  try
    HoraExtra := THoraExtra.Create(Codigo, Data, TempoEmMin, DomingoOuFeriado);
    if not BancoDeHoras.ContainsKey(Codigo) then
      BancoDeHoras.Add(Codigo, ListaHorasExtras);

    BancoDeHoras.Items[Codigo].Add(HoraExtra);

    ShowMessage('Adicionado com sucesso.');
  Except
    HoraExtra.Free;
    ListaHorasExtras.Free;
  end;
end;

procedure TPrincipal.BtnProcessarClick(Sender: TObject);
var
  ChaveCodigo: Integer;
  HoraExtraRef: THoraExtra;
begin
  MemoLog.Clear;
  for ChaveCodigo in BancoDeHoras.Keys do
    begin
      ShowMessage(ChaveCodigo.ToString + ' : tamanho ->' + BancoDeHoras.Items[ChaveCodigo].Count.ToString);
    end;
end;

procedure TPrincipal.FormCreate(Sender: TObject);
begin
  BancoDeHoras := TDictionary<Integer, TObjectList<THoraExtra>>.Create;
end;

procedure TPrincipal.FormDestroy(Sender: TObject);
begin
  BancoDeHoras.Free;
  HoraExtra.Free;
end;

end.
